import { Alert, Button, Modal, Paper, Snackbar, Typography } from '@mui/material'
import React, { useEffect, useState } from 'react'
import { BoxBody, BoxHeader, ClassScheduleTableWrapper, ModalBox, ModalButtons, ModalHeader, ModalSelectWrapper } from '../../../global_styles/styles'
import { TableTHHeader } from '../../DiplomaTable'
import { TeacherSciencesButtonBox } from '../styles'
import { UnableToSpecify } from './styles'
import { Link, Outlet, useLocation } from 'react-router-dom'
import { lesson_edit, teacher_calendar_delay, teacher_calendar_plan } from '../../../utils/API_urls'
import { getTeacheravCalendar } from './requests'
import CustomizedInputSimple from '../../CustomizedInputSimple'
import { patchTeacheravCalendar } from './request'
import DataPicker from '../../DataPicker'
import listLanguage from './language.json'
import { useSelector } from 'react-redux'

const anchorOrigin1 = {
  vertical: 'bottom',
  horizontal: "right"
}

const anchorOrigin2 = {
  vertical: 'bottom',
  horizontal: "left"
}



export default function CalendarPlan() {
  const language = useSelector(state => state.language)
  const { state } = useLocation()
  const [calendarPlansList, setcalendarPlansList] = useState([])
  const [calendarDelayList, setcalendarDelayList] = useState([])
  const [openAlert, setOpenAlert] = useState(false)
  const [Status, setStatus] = useState(false)
  useEffect(() => {
    getTeacheravCalendar(`${teacher_calendar_plan}${state.data}/`, (response) => {
      setcalendarPlansList(response.data.data.calendar_plans)
    }, (error) => {
      console.log(error)
    })
  }, [Status])


  useEffect(() => {
    getTeacheravCalendar(`${teacher_calendar_delay}${state.data}/`, (response) => {
      setcalendarDelayList(response.data.data.calendar_plans)
      console.log(response.data.data.calendar_plans);
    }, (error) => {
      console.log(error)
    })
  }, [])


   // Lang

  return (
    <Paper
      elevation={0}
      sx={{
        width: '100%',
        padding: "20px",
        borderRadius: "10px"
      }}
    >
      <Typography
        variant='h2'
        sx={{
          color: '#000',
          fontSize: '20px',
          fontStyle: 'normal',
          fontWeight: '600',
          lineHeight: 'normal',
          mb: "26px"
        }}
      >
        {listLanguage.CalendarPlan[language]}
      </Typography>
      <BoxHeader>
        <Typography
          variant='h2'
          sx={{
            color: '#00753B',
            fontSize: '14px',
            fontStyle: 'normal',
            fontWeight: '500',
            lineHeight: '150%',
            padding: "10px",
            alignItem: "center",
            bgcolor: "rgba(0, 138, 22, 0.08)",
            borderRadius: "10px"
          }}
        >
          {listLanguage.Duration[language]} { '1' ? "1" + listLanguage.Day[language] : listLanguage.Days[language]}
        </Typography>
        <Button
          variant="contained"
          sx={{
            textTransform: "capitalize",
            boxShadow: "none",
            padding: "12px 70px",
            borderRadius: "10px",
            fontWeight: "600",
            fontSize: "14px",
            lineHeight: "17px"
          }}
          startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
            <g clipPath="url(#clip0_493_2456)">
              <path d="M10.0013 6.66675C9.34203 6.66675 8.69757 6.86224 8.1494 7.22852C7.60124 7.59479 7.174 8.11538 6.92171 8.72447C6.66941 9.33356 6.6034 10.0038 6.73202 10.6504C6.86064 11.297 7.17811 11.8909 7.64428 12.3571C8.11046 12.8233 8.7044 13.1407 9.351 13.2694C9.99761 13.398 10.6678 13.332 11.2769 13.0797C11.886 12.8274 12.4066 12.4001 12.7729 11.852C13.1391 11.3038 13.3346 10.6594 13.3346 10.0001C13.3346 9.11603 12.9834 8.26818 12.3583 7.64306C11.7332 7.01794 10.8854 6.66675 10.0013 6.66675ZM10.0013 11.6667C9.67167 11.6667 9.34944 11.569 9.07535 11.3859C8.80127 11.2027 8.58765 10.9424 8.4615 10.6379C8.33536 10.3333 8.30235 9.99823 8.36666 9.67493C8.43097 9.35163 8.58971 9.05466 8.82279 8.82157C9.05588 8.58848 9.35285 8.42975 9.67615 8.36544C9.99946 8.30113 10.3346 8.33414 10.6391 8.46028C10.9437 8.58643 11.204 8.80005 11.3871 9.07413C11.5702 9.34821 11.668 9.67045 11.668 10.0001C11.668 10.4421 11.4924 10.866 11.1798 11.1786C10.8673 11.4912 10.4433 11.6667 10.0013 11.6667Z" fill="white" />
              <path d="M17.7461 11.5833L17.3761 11.37C17.5427 10.4637 17.5427 9.53463 17.3761 8.62833L17.7461 8.415C18.0307 8.25085 18.2801 8.03226 18.4801 7.77172C18.6802 7.51118 18.827 7.21378 18.9121 6.89651C18.9972 6.57925 19.019 6.24832 18.9762 5.92263C18.9335 5.59694 18.827 5.28286 18.6628 4.99833C18.4987 4.7138 18.2801 4.46439 18.0195 4.26434C17.759 4.06428 17.4616 3.91751 17.1443 3.83239C16.8271 3.74726 16.4961 3.72547 16.1704 3.76824C15.8447 3.81101 15.5307 3.91751 15.2461 4.08167L14.8753 4.29583C14.1749 3.69743 13.37 3.23354 12.5011 2.9275V2.5C12.5011 1.83696 12.2377 1.20107 11.7689 0.732233C11.3001 0.263392 10.6642 0 10.0011 0C9.33809 0 8.70221 0.263392 8.23337 0.732233C7.76453 1.20107 7.50113 1.83696 7.50113 2.5V2.9275C6.63229 3.23464 5.82767 3.69967 5.1278 4.29917L4.7553 4.08333C4.18067 3.75181 3.49787 3.66214 2.85712 3.83405C2.21637 4.00596 1.67016 4.42536 1.33863 5C1.00711 5.57464 0.917445 6.25743 1.08935 6.89818C1.26126 7.53893 1.68067 8.08515 2.2553 8.41667L2.6253 8.63C2.45873 9.5363 2.45873 10.4654 2.6253 11.3717L2.2553 11.585C1.68067 11.9165 1.26126 12.4627 1.08935 13.1035C0.917445 13.7442 1.00711 14.427 1.33863 15.0017C1.67016 15.5763 2.21637 15.9957 2.85712 16.1676C3.49787 16.3395 4.18067 16.2499 4.7553 15.9183L5.12613 15.7042C5.82677 16.3027 6.63195 16.7666 7.50113 17.0725V17.5C7.50113 18.163 7.76453 18.7989 8.23337 19.2678C8.70221 19.7366 9.33809 20 10.0011 20C10.6642 20 11.3001 19.7366 11.7689 19.2678C12.2377 18.7989 12.5011 18.163 12.5011 17.5V17.0725C13.37 16.7654 14.1746 16.3003 14.8745 15.7008L15.247 15.9158C15.8216 16.2474 16.5044 16.337 17.1451 16.1651C17.7859 15.9932 18.3321 15.5738 18.6636 14.9992C18.9952 14.4245 19.0848 13.7417 18.9129 13.101C18.741 12.4602 18.3216 11.914 17.747 11.5825L17.7461 11.5833ZM15.6228 8.43667C15.905 9.45922 15.905 10.5391 15.6228 11.5617C15.5735 11.7396 15.5848 11.9289 15.6548 12.0998C15.7247 12.2707 15.8495 12.4135 16.0095 12.5058L16.9128 13.0275C17.1043 13.138 17.2441 13.3201 17.3014 13.5336C17.3586 13.7472 17.3287 13.9747 17.2182 14.1663C17.1077 14.3578 16.9257 14.4975 16.7121 14.5548C16.4985 14.6121 16.271 14.5822 16.0795 14.4717L15.1745 13.9483C15.0144 13.8556 14.828 13.8188 14.6447 13.8437C14.4614 13.8686 14.2915 13.9538 14.162 14.0858C13.4202 14.843 12.4858 15.3833 11.4595 15.6483C11.2803 15.6944 11.1216 15.7987 11.0083 15.9449C10.895 16.0911 10.8335 16.2709 10.8336 16.4558V17.5C10.8336 17.721 10.7458 17.933 10.5896 18.0893C10.4333 18.2455 10.2213 18.3333 10.0003 18.3333C9.77929 18.3333 9.56733 18.2455 9.41105 18.0893C9.25477 17.933 9.16697 17.721 9.16697 17.5V16.4567C9.16706 16.2717 9.10561 16.092 8.99231 15.9458C8.879 15.7996 8.72027 15.6952 8.54113 15.6492C7.51476 15.3831 6.58058 14.8416 5.83947 14.0833C5.70991 13.9513 5.54008 13.8661 5.35676 13.8412C5.17345 13.8163 4.98706 13.8531 4.82697 13.9458L3.92363 14.4683C3.82883 14.5239 3.72396 14.5602 3.61507 14.5751C3.50619 14.59 3.39543 14.5832 3.28918 14.5551C3.18293 14.527 3.08329 14.4782 2.99598 14.4114C2.90868 14.3446 2.83545 14.2613 2.7805 14.1661C2.72555 14.0709 2.68996 13.9658 2.6758 13.8568C2.66163 13.7479 2.66916 13.6372 2.69796 13.5311C2.72675 13.425 2.77624 13.3257 2.84358 13.2389C2.91091 13.152 2.99476 13.0793 3.0903 13.025L3.99363 12.5033C4.15359 12.411 4.27836 12.2682 4.34835 12.0973C4.41834 11.9264 4.42958 11.7371 4.3803 11.5592C4.0981 10.5366 4.0981 9.45672 4.3803 8.43417C4.42869 8.25657 4.41691 8.06795 4.34681 7.89774C4.27671 7.72754 4.15223 7.58534 3.9928 7.49333L3.08947 6.97167C2.89796 6.86116 2.75819 6.6791 2.70092 6.46555C2.64364 6.25199 2.67354 6.02442 2.78405 5.83292C2.89456 5.64141 3.07662 5.50164 3.29017 5.44437C3.50373 5.38709 3.73129 5.41699 3.9228 5.5275L4.8278 6.05083C4.98745 6.14376 5.17345 6.18101 5.35657 6.15672C5.5397 6.13244 5.70956 6.048 5.83947 5.91667C6.58121 5.15945 7.51566 4.61918 8.54197 4.35417C8.72166 4.30797 8.8808 4.20313 8.99416 4.05625C9.10753 3.90938 9.16864 3.72887 9.1678 3.54333V2.5C9.1678 2.27899 9.2556 2.06702 9.41188 1.91074C9.56816 1.75446 9.78012 1.66667 10.0011 1.66667C10.2221 1.66667 10.4341 1.75446 10.5904 1.91074C10.7467 2.06702 10.8345 2.27899 10.8345 2.5V3.54333C10.8344 3.7283 10.8958 3.90804 11.0091 4.05423C11.1224 4.20043 11.2812 4.30478 11.4603 4.35083C12.487 4.61679 13.4215 5.15824 14.1628 5.91667C14.2924 6.04872 14.4622 6.13391 14.6455 6.15881C14.8288 6.1837 15.0152 6.14689 15.1753 6.05417L16.0786 5.53167C16.1734 5.47609 16.2783 5.43981 16.3872 5.42492C16.4961 5.41003 16.6068 5.41683 16.7131 5.44492C16.8193 5.47301 16.919 5.52184 17.0063 5.58859C17.0936 5.65535 17.1668 5.73872 17.2218 5.83389C17.2767 5.92907 17.3123 6.03417 17.3265 6.14316C17.3406 6.25214 17.3331 6.36285 17.3043 6.46891C17.2755 6.57497 17.226 6.67429 17.1587 6.76114C17.0914 6.848 17.0075 6.92068 16.912 6.975L16.0086 7.49667C15.8495 7.58892 15.7254 7.73123 15.6556 7.90141C15.5858 8.07159 15.5743 8.26008 15.6228 8.4375V8.43667Z" fill="white" />
            </g>
            <defs>
              <clipPath id="clip0_493_2456">
                <rect width="20" height="20" fill="white" />
              </clipPath>
            </defs>
          </svg>}
        >
         {listLanguage.Shaping[language]}
        </Button>
      </BoxHeader>
      <BoxBody>
        <ClassScheduleTableWrapper>
          <table>
            <thead>
              <tr>
                <TableTHHeader
                  text={listLanguage.Number[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.Theme[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.StudyingTime[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.Status[language]}
                  iconc={null}
                />
              </tr>
            </thead>
            <tbody>
              {
                calendarPlansList.length > 0 ? calendarPlansList.map((elem, index) => {
                  return (
                    <Fakultets key={index} elem={elem} callback_func={(val) => setStatus(val)} status={Status}/>
                  )
                })
                  :
                  <tr>
                    <th colSpan={12} align='center'>{listLanguage.NoInfo[language]}</th>
                  </tr>
              }
            </tbody>
          </table>

          <Typography
            variant='h2'
            sx={{
              color: '#000',
              fontSize: '16px',
              fontStyle: 'normal',
              fontWeight: '500',
              lineHeight: 'normal',
              padding: '20px 10px',
              width: "100%",
              borderRight: "1px solid #eee",
              borderLeft: "1px solid #eee",
            }}
          >
            {listLanguage.RescheduledTime[language]}
          </Typography>
          <table>
            <thead>
              <tr>
                <TableTHHeader
                  text={listLanguage.Number[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.Theme[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.StudyingTime[language]}
                  iconc={null}
                />
                <TableTHHeader
                  text={listLanguage.Status[language]}
                  iconc={null}
                />
              </tr>
            </thead>
            <tbody>
              {
                [1].map((elem, index) => {
                  return (
                    <tr key={index}>
                      <th>1</th>
                      <th>10. Dasturiy ta'minotning metrik xususiyatlarini hisoblash tartibi. Jib metrikasi. Chepin metrikasi.</th>
                      <th>29-05-2023</th>
                      <th style={{ width: "200px" }}>
                        <TeacherSciencesButtonBox>
                          <UnableToSpecify>
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                              <g clipPath="url(#clip0_579_2448)">
                                <path d="M10.665 5.33337C10.54 5.20839 10.3704 5.13818 10.1937 5.13818C10.0169 5.13818 9.84736 5.20839 9.72234 5.33337L7.99834 7.05738L6.27434 5.33337C6.1486 5.21194 5.9802 5.14474 5.80541 5.14626C5.63061 5.14778 5.4634 5.21789 5.33979 5.3415C5.21619 5.4651 5.14608 5.63231 5.14456 5.80711C5.14304 5.98191 5.21023 6.15031 5.33167 6.27604L7.05567 8.00004L5.33167 9.72404C5.21023 9.84978 5.14304 10.0182 5.14456 10.193C5.14608 10.3678 5.21619 10.535 5.33979 10.6586C5.4634 10.7822 5.63061 10.8523 5.80541 10.8538C5.9802 10.8553 6.1486 10.7881 6.27434 10.6667L7.99834 8.94271L9.72234 10.6667C9.84807 10.7881 10.0165 10.8553 10.1913 10.8538C10.3661 10.8523 10.5333 10.7822 10.6569 10.6586C10.7805 10.535 10.8506 10.3678 10.8521 10.193C10.8536 10.0182 10.7864 9.84978 10.665 9.72404L8.94101 8.00004L10.665 6.27604C10.79 6.15102 10.8602 5.98148 10.8602 5.80471C10.8602 5.62793 10.79 5.45839 10.665 5.33337Z" fill="#F41B35" />
                                <path d="M8 0C6.41775 0 4.87103 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346629 6.40034 -0.15496 8.00888 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C15.9977 5.87897 15.1541 3.84547 13.6543 2.34568C12.1545 0.845886 10.121 0.00229405 8 0ZM8 14.6667C6.68146 14.6667 5.39253 14.2757 4.2962 13.5431C3.19987 12.8106 2.34539 11.7694 1.84081 10.5512C1.33622 9.33305 1.2042 7.99261 1.46144 6.6994C1.71867 5.40619 2.35361 4.21831 3.28596 3.28596C4.21831 2.3536 5.4062 1.71867 6.6994 1.46143C7.99261 1.2042 9.33305 1.33622 10.5512 1.8408C11.7694 2.34539 12.8106 3.19987 13.5431 4.2962C14.2757 5.39253 14.6667 6.68146 14.6667 8C14.6647 9.76752 13.9617 11.4621 12.7119 12.7119C11.4621 13.9617 9.76752 14.6647 8 14.6667Z" fill="#F41B35" />
                              </g>
                              <defs>
                                <clipPath id="clip0_579_2448">
                                  <rect width="16" height="16" fill="white" />
                                </clipPath>
                              </defs>
                            </svg>
                            <p>{listLanguage.Unspecifiable[language]}</p>
                          </UnableToSpecify>
                          <Link to="thematicblock" state={elem}>
                            <Button
                              variant="contained"
                              size="small"
                              color="secondary"
                              sx={{
                                textTransform: "none",
                                borderRadius: "10px",
                                boxShadow: "none",
                                width: "181px"
                              }}
                              startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                                <g clipPath="url(#clip0_493_1783)">
                                  <path d="M2.66719 4C2.40436 4.00069 2.144 3.94925 1.90117 3.84866C1.65835 3.74808 1.43788 3.60034 1.25252 3.414L0.223189 2.498C0.0911113 2.38024 0.0112215 2.21484 0.00109455 2.03818C-0.00903242 1.86152 0.051433 1.68807 0.169189 1.556C0.286945 1.42392 0.452346 1.34403 0.629005 1.3339C0.805665 1.32377 0.979111 1.38424 1.11119 1.502L2.16786 2.44466C2.22835 2.51259 2.3021 2.56743 2.38457 2.60579C2.46705 2.64415 2.5565 2.66523 2.64743 2.66773C2.73835 2.67022 2.82883 2.65409 2.91329 2.62031C2.99774 2.58654 3.07439 2.53584 3.13852 2.47133L5.54119 0.183996C5.67039 0.068976 5.83923 0.00867518 6.01206 0.0158298C6.18489 0.0229845 6.34817 0.0970345 6.46742 0.222339C6.58666 0.347644 6.65254 0.514392 6.65113 0.687363C6.64972 0.860335 6.58113 1.02599 6.45986 1.14933L4.06719 3.42533C3.88304 3.60841 3.66461 3.75339 3.42438 3.852C3.18416 3.95061 2.92686 4.0009 2.66719 4ZM16.0005 2.66666C16.0005 2.48985 15.9303 2.32028 15.8053 2.19526C15.6802 2.07023 15.5107 2 15.3339 2H8.66719C8.49038 2 8.32081 2.07023 8.19579 2.19526C8.07076 2.32028 8.00052 2.48985 8.00052 2.66666C8.00052 2.84347 8.07076 3.01304 8.19579 3.13807C8.32081 3.26309 8.49038 3.33333 8.66719 3.33333H15.3339C15.5107 3.33333 15.6802 3.26309 15.8053 3.13807C15.9303 3.01304 16.0005 2.84347 16.0005 2.66666ZM4.06719 8.75866L6.45986 6.48266C6.52664 6.42321 6.58078 6.35093 6.61905 6.27012C6.65733 6.18932 6.67896 6.10164 6.68266 6.01231C6.68636 5.92297 6.67205 5.83381 6.64058 5.75011C6.60911 5.66642 6.56113 5.58992 6.49949 5.52515C6.43786 5.46038 6.36382 5.40867 6.28179 5.3731C6.19976 5.33752 6.11141 5.31882 6.022 5.31809C5.93259 5.31736 5.84395 5.33462 5.76135 5.36885C5.67875 5.40308 5.60388 5.45357 5.54119 5.51733L3.14119 7.80466C3.01428 7.92602 2.84545 7.99374 2.66986 7.99374C2.49426 7.99374 2.32543 7.92602 2.19852 7.80466L1.13852 6.748C1.01279 6.62656 0.844386 6.55936 0.669588 6.56088C0.49479 6.5624 0.327582 6.63251 0.203977 6.75612C0.0803713 6.87972 0.0102587 7.04693 0.00873977 7.22173C0.00722083 7.39653 0.0744171 7.56493 0.195856 7.69066L1.25252 8.74733C1.62564 9.12053 2.13113 9.33114 2.65885 9.33326C3.18658 9.33539 3.69375 9.12885 4.06986 8.75866H4.06719ZM16.0005 8C16.0005 7.82318 15.9303 7.65362 15.8053 7.52859C15.6802 7.40357 15.5107 7.33333 15.3339 7.33333H8.66719C8.49038 7.33333 8.32081 7.40357 8.19579 7.52859C8.07076 7.65362 8.00052 7.82318 8.00052 8C8.00052 8.17681 8.07076 8.34638 8.19579 8.4714C8.32081 8.59642 8.49038 8.66666 8.66719 8.66666H15.3339C15.5107 8.66666 15.6802 8.59642 15.8053 8.4714C15.9303 8.34638 16.0005 8.17681 16.0005 8ZM4.06719 14.092L6.45719 11.816C6.52397 11.7565 6.57811 11.6843 6.61639 11.6035C6.65466 11.5227 6.67629 11.435 6.67999 11.3456C6.68369 11.2563 6.66938 11.1671 6.63791 11.0834C6.60645 10.9998 6.55847 10.9232 6.49683 10.8585C6.43519 10.7937 6.36115 10.742 6.27912 10.7064C6.19709 10.6709 6.10874 10.6522 6.01933 10.6514C5.92992 10.6507 5.84128 10.668 5.75868 10.7022C5.67608 10.7364 5.60121 10.7869 5.53852 10.8507L3.13852 13.138C3.07439 13.2025 2.99774 13.2532 2.91329 13.287C2.82883 13.3208 2.73835 13.3369 2.64743 13.3344C2.5565 13.3319 2.46705 13.3108 2.38457 13.2725C2.3021 13.2341 2.22835 13.1793 2.16786 13.1113L1.11119 12.1687C0.979111 12.0509 0.805665 11.9904 0.629005 12.0006C0.452346 12.0107 0.286945 12.0906 0.169189 12.2227C0.051433 12.3547 -0.00903242 12.5282 0.00109455 12.7048C0.0112215 12.8815 0.0911113 13.0469 0.223189 13.1647L1.25252 14.0807C1.62564 14.4539 2.13113 14.6645 2.65885 14.6666C3.18658 14.6687 3.69375 14.4622 4.06986 14.092H4.06719ZM16.0005 13.3333C16.0005 13.1565 15.9303 12.9869 15.8053 12.8619C15.6802 12.7369 15.5107 12.6667 15.3339 12.6667H8.66719C8.49038 12.6667 8.32081 12.7369 8.19579 12.8619C8.07076 12.9869 8.00052 13.1565 8.00052 13.3333C8.00052 13.5101 8.07076 13.6797 8.19579 13.8047C8.32081 13.9298 8.49038 14 8.66719 14H15.3339C15.5107 14 15.6802 13.9298 15.8053 13.8047C15.9303 13.6797 16.0005 13.5101 16.0005 13.3333Z" fill="black" />
                                </g>
                                <defs>
                                  <clipPath id="clip0_493_1783">
                                    <rect width="16" height="16" fill="white" />
                                  </clipPath>
                                </defs>
                              </svg>}
                            >
                              {listLanguage.Attendance[language]}
                            </Button>
                          </Link>
                        </TeacherSciencesButtonBox>
                      </th>
                    </tr>
                  )
                })
              }
            </tbody>
          </table>
        </ClassScheduleTableWrapper>
      </BoxBody>
    </Paper>
  )
}


export function CalendarPlanMain() {
  return (
    <Outlet />
  )
}

const StatusLesson = ({ status, status_day }) => {

  // Lang
 const language = useSelector(state => state.language)

  if (status == 'failed' && status_day == 'last') {
    return (
      <Button
        variant="contained"
        size="small"
        // color="secondary"
        sx={{
          textTransform: "none",
          borderRadius: "10px",
          boxShadow: "none",
          width: "181px",
          backgroundColor: "red"
        }}
        startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
          <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
        </svg>}
      >
        {listLanguage.NotCompleted[language]}
      </Button>
    )
  } else if (status == 'failed' && status_day == 'next') {
    return (
      <Button
        variant="contained"
        size="small"
        // color="secondary"
        sx={{
          textTransform: "none",
          borderRadius: "10px",
          boxShadow: "none",
          width: "181px",
        }}
        startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
          <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z" />
        </svg>}
      >
        {listLanguage.WillBeCompleted[language]}
      </Button>
    )

  } else if (status == 'failed' && status_day == 'today') {
    return (
      <Button
        variant="contained"
        size="small"
        // color="secondary"
        sx={{
          textTransform: "none",
          borderRadius: "10px",
          boxShadow: "none",
          width: "181px",
          backgroundColor: "YellowButton.main",
          "&:hover": {
            backgroundColor: "YellowButton.main",
          },
        }}
        startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clock" viewBox="0 0 16 16">
          <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z" />
          <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z" />
        </svg>}
      >
       {listLanguage.Current[language]}
      </Button>
    )
  } else if (status == 'past') {
    return (
      <Button
        variant="contained"
        size="small"
        // color="secondary"
        sx={{
          textTransform: "none",
          borderRadius: "10px",
          boxShadow: "none",
          width: "181px",
          backgroundColor: "text.secondary",
          "&:hover": {
            backgroundColor: "text.secondary",
          },
          cursor: "not-allowed"
        }}
        startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
          <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
        </svg>}
      >
        {listLanguage.Completed[language]}
      </Button>
    )
  } else if (status == 'delay') {
    return (
      <Button
        variant="contained"
        size="small"
        // color="secondary"
        sx={{
          textTransform: "none",
          borderRadius: "10px",
          boxShadow: "none",
          width: "181px",
          backgroundColor: "yellow",
          color: 'black'
        }}
        startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
          <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z" />
        </svg>}
      >
        {listLanguage.Postponed[language]}
      </Button>
    )
  }
}


const StatusLessonAttendece = ({ status, status_day, id }) => {

   // Lang
   const language = useSelector(state => state.language)

  if (status == 'failed' && status_day == 'last') {
    return (
      <Link to="thematicblock" state={{ data: false, id: id }}>
        <Button
          variant="contained"
          size="small"
          color="secondary"
          sx={{
            textTransform: "none",
            borderRadius: "10px",
            boxShadow: "none",
            width: "181px"
          }}
          startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <g clipPath="url(#clip0_493_1783)">
              <path d="M2.66719 4C2.40436 4.00069 2.144 3.94925 1.90117 3.84866C1.65835 3.74808 1.43788 3.60034 1.25252 3.414L0.223189 2.498C0.0911113 2.38024 0.0112215 2.21484 0.00109455 2.03818C-0.00903242 1.86152 0.051433 1.68807 0.169189 1.556C0.286945 1.42392 0.452346 1.34403 0.629005 1.3339C0.805665 1.32377 0.979111 1.38424 1.11119 1.502L2.16786 2.44466C2.22835 2.51259 2.3021 2.56743 2.38457 2.60579C2.46705 2.64415 2.5565 2.66523 2.64743 2.66773C2.73835 2.67022 2.82883 2.65409 2.91329 2.62031C2.99774 2.58654 3.07439 2.53584 3.13852 2.47133L5.54119 0.183996C5.67039 0.068976 5.83923 0.00867518 6.01206 0.0158298C6.18489 0.0229845 6.34817 0.0970345 6.46742 0.222339C6.58666 0.347644 6.65254 0.514392 6.65113 0.687363C6.64972 0.860335 6.58113 1.02599 6.45986 1.14933L4.06719 3.42533C3.88304 3.60841 3.66461 3.75339 3.42438 3.852C3.18416 3.95061 2.92686 4.0009 2.66719 4ZM16.0005 2.66666C16.0005 2.48985 15.9303 2.32028 15.8053 2.19526C15.6802 2.07023 15.5107 2 15.3339 2H8.66719C8.49038 2 8.32081 2.07023 8.19579 2.19526C8.07076 2.32028 8.00052 2.48985 8.00052 2.66666C8.00052 2.84347 8.07076 3.01304 8.19579 3.13807C8.32081 3.26309 8.49038 3.33333 8.66719 3.33333H15.3339C15.5107 3.33333 15.6802 3.26309 15.8053 3.13807C15.9303 3.01304 16.0005 2.84347 16.0005 2.66666ZM4.06719 8.75866L6.45986 6.48266C6.52664 6.42321 6.58078 6.35093 6.61905 6.27012C6.65733 6.18932 6.67896 6.10164 6.68266 6.01231C6.68636 5.92297 6.67205 5.83381 6.64058 5.75011C6.60911 5.66642 6.56113 5.58992 6.49949 5.52515C6.43786 5.46038 6.36382 5.40867 6.28179 5.3731C6.19976 5.33752 6.11141 5.31882 6.022 5.31809C5.93259 5.31736 5.84395 5.33462 5.76135 5.36885C5.67875 5.40308 5.60388 5.45357 5.54119 5.51733L3.14119 7.80466C3.01428 7.92602 2.84545 7.99374 2.66986 7.99374C2.49426 7.99374 2.32543 7.92602 2.19852 7.80466L1.13852 6.748C1.01279 6.62656 0.844386 6.55936 0.669588 6.56088C0.49479 6.5624 0.327582 6.63251 0.203977 6.75612C0.0803713 6.87972 0.0102587 7.04693 0.00873977 7.22173C0.00722083 7.39653 0.0744171 7.56493 0.195856 7.69066L1.25252 8.74733C1.62564 9.12053 2.13113 9.33114 2.65885 9.33326C3.18658 9.33539 3.69375 9.12885 4.06986 8.75866H4.06719ZM16.0005 8C16.0005 7.82318 15.9303 7.65362 15.8053 7.52859C15.6802 7.40357 15.5107 7.33333 15.3339 7.33333H8.66719C8.49038 7.33333 8.32081 7.40357 8.19579 7.52859C8.07076 7.65362 8.00052 7.82318 8.00052 8C8.00052 8.17681 8.07076 8.34638 8.19579 8.4714C8.32081 8.59642 8.49038 8.66666 8.66719 8.66666H15.3339C15.5107 8.66666 15.6802 8.59642 15.8053 8.4714C15.9303 8.34638 16.0005 8.17681 16.0005 8ZM4.06719 14.092L6.45719 11.816C6.52397 11.7565 6.57811 11.6843 6.61639 11.6035C6.65466 11.5227 6.67629 11.435 6.67999 11.3456C6.68369 11.2563 6.66938 11.1671 6.63791 11.0834C6.60645 10.9998 6.55847 10.9232 6.49683 10.8585C6.43519 10.7937 6.36115 10.742 6.27912 10.7064C6.19709 10.6709 6.10874 10.6522 6.01933 10.6514C5.92992 10.6507 5.84128 10.668 5.75868 10.7022C5.67608 10.7364 5.60121 10.7869 5.53852 10.8507L3.13852 13.138C3.07439 13.2025 2.99774 13.2532 2.91329 13.287C2.82883 13.3208 2.73835 13.3369 2.64743 13.3344C2.5565 13.3319 2.46705 13.3108 2.38457 13.2725C2.3021 13.2341 2.22835 13.1793 2.16786 13.1113L1.11119 12.1687C0.979111 12.0509 0.805665 11.9904 0.629005 12.0006C0.452346 12.0107 0.286945 12.0906 0.169189 12.2227C0.051433 12.3547 -0.00903242 12.5282 0.00109455 12.7048C0.0112215 12.8815 0.0911113 13.0469 0.223189 13.1647L1.25252 14.0807C1.62564 14.4539 2.13113 14.6645 2.65885 14.6666C3.18658 14.6687 3.69375 14.4622 4.06986 14.092H4.06719ZM16.0005 13.3333C16.0005 13.1565 15.9303 12.9869 15.8053 12.8619C15.6802 12.7369 15.5107 12.6667 15.3339 12.6667H8.66719C8.49038 12.6667 8.32081 12.7369 8.19579 12.8619C8.07076 12.9869 8.00052 13.1565 8.00052 13.3333C8.00052 13.5101 8.07076 13.6797 8.19579 13.8047C8.32081 13.9298 8.49038 14 8.66719 14H15.3339C15.5107 14 15.6802 13.9298 15.8053 13.8047C15.9303 13.6797 16.0005 13.5101 16.0005 13.3333Z" fill="black" />
            </g>
            <defs>
              <clipPath id="clip0_493_1783">
                <rect width="16" height="16" fill="white" />
              </clipPath>
            </defs>
          </svg>}
        >
          {listLanguage.Attendance[language]}
        </Button>
      </Link>
    )

  } else if (status == 'failed' && status_day == 'today') {
    return (
      <Link to="thematicblock" state={{ data: true, id: id }}>
        <Button
          variant="contained"
          size="small"
          color="secondary"
          sx={{
            textTransform: "none",
            borderRadius: "10px",
            boxShadow: "none",
            width: "181px"
          }}
          startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <g clipPath="url(#clip0_493_1783)">
              <path d="M2.66719 4C2.40436 4.00069 2.144 3.94925 1.90117 3.84866C1.65835 3.74808 1.43788 3.60034 1.25252 3.414L0.223189 2.498C0.0911113 2.38024 0.0112215 2.21484 0.00109455 2.03818C-0.00903242 1.86152 0.051433 1.68807 0.169189 1.556C0.286945 1.42392 0.452346 1.34403 0.629005 1.3339C0.805665 1.32377 0.979111 1.38424 1.11119 1.502L2.16786 2.44466C2.22835 2.51259 2.3021 2.56743 2.38457 2.60579C2.46705 2.64415 2.5565 2.66523 2.64743 2.66773C2.73835 2.67022 2.82883 2.65409 2.91329 2.62031C2.99774 2.58654 3.07439 2.53584 3.13852 2.47133L5.54119 0.183996C5.67039 0.068976 5.83923 0.00867518 6.01206 0.0158298C6.18489 0.0229845 6.34817 0.0970345 6.46742 0.222339C6.58666 0.347644 6.65254 0.514392 6.65113 0.687363C6.64972 0.860335 6.58113 1.02599 6.45986 1.14933L4.06719 3.42533C3.88304 3.60841 3.66461 3.75339 3.42438 3.852C3.18416 3.95061 2.92686 4.0009 2.66719 4ZM16.0005 2.66666C16.0005 2.48985 15.9303 2.32028 15.8053 2.19526C15.6802 2.07023 15.5107 2 15.3339 2H8.66719C8.49038 2 8.32081 2.07023 8.19579 2.19526C8.07076 2.32028 8.00052 2.48985 8.00052 2.66666C8.00052 2.84347 8.07076 3.01304 8.19579 3.13807C8.32081 3.26309 8.49038 3.33333 8.66719 3.33333H15.3339C15.5107 3.33333 15.6802 3.26309 15.8053 3.13807C15.9303 3.01304 16.0005 2.84347 16.0005 2.66666ZM4.06719 8.75866L6.45986 6.48266C6.52664 6.42321 6.58078 6.35093 6.61905 6.27012C6.65733 6.18932 6.67896 6.10164 6.68266 6.01231C6.68636 5.92297 6.67205 5.83381 6.64058 5.75011C6.60911 5.66642 6.56113 5.58992 6.49949 5.52515C6.43786 5.46038 6.36382 5.40867 6.28179 5.3731C6.19976 5.33752 6.11141 5.31882 6.022 5.31809C5.93259 5.31736 5.84395 5.33462 5.76135 5.36885C5.67875 5.40308 5.60388 5.45357 5.54119 5.51733L3.14119 7.80466C3.01428 7.92602 2.84545 7.99374 2.66986 7.99374C2.49426 7.99374 2.32543 7.92602 2.19852 7.80466L1.13852 6.748C1.01279 6.62656 0.844386 6.55936 0.669588 6.56088C0.49479 6.5624 0.327582 6.63251 0.203977 6.75612C0.0803713 6.87972 0.0102587 7.04693 0.00873977 7.22173C0.00722083 7.39653 0.0744171 7.56493 0.195856 7.69066L1.25252 8.74733C1.62564 9.12053 2.13113 9.33114 2.65885 9.33326C3.18658 9.33539 3.69375 9.12885 4.06986 8.75866H4.06719ZM16.0005 8C16.0005 7.82318 15.9303 7.65362 15.8053 7.52859C15.6802 7.40357 15.5107 7.33333 15.3339 7.33333H8.66719C8.49038 7.33333 8.32081 7.40357 8.19579 7.52859C8.07076 7.65362 8.00052 7.82318 8.00052 8C8.00052 8.17681 8.07076 8.34638 8.19579 8.4714C8.32081 8.59642 8.49038 8.66666 8.66719 8.66666H15.3339C15.5107 8.66666 15.6802 8.59642 15.8053 8.4714C15.9303 8.34638 16.0005 8.17681 16.0005 8ZM4.06719 14.092L6.45719 11.816C6.52397 11.7565 6.57811 11.6843 6.61639 11.6035C6.65466 11.5227 6.67629 11.435 6.67999 11.3456C6.68369 11.2563 6.66938 11.1671 6.63791 11.0834C6.60645 10.9998 6.55847 10.9232 6.49683 10.8585C6.43519 10.7937 6.36115 10.742 6.27912 10.7064C6.19709 10.6709 6.10874 10.6522 6.01933 10.6514C5.92992 10.6507 5.84128 10.668 5.75868 10.7022C5.67608 10.7364 5.60121 10.7869 5.53852 10.8507L3.13852 13.138C3.07439 13.2025 2.99774 13.2532 2.91329 13.287C2.82883 13.3208 2.73835 13.3369 2.64743 13.3344C2.5565 13.3319 2.46705 13.3108 2.38457 13.2725C2.3021 13.2341 2.22835 13.1793 2.16786 13.1113L1.11119 12.1687C0.979111 12.0509 0.805665 11.9904 0.629005 12.0006C0.452346 12.0107 0.286945 12.0906 0.169189 12.2227C0.051433 12.3547 -0.00903242 12.5282 0.00109455 12.7048C0.0112215 12.8815 0.0911113 13.0469 0.223189 13.1647L1.25252 14.0807C1.62564 14.4539 2.13113 14.6645 2.65885 14.6666C3.18658 14.6687 3.69375 14.4622 4.06986 14.092H4.06719ZM16.0005 13.3333C16.0005 13.1565 15.9303 12.9869 15.8053 12.8619C15.6802 12.7369 15.5107 12.6667 15.3339 12.6667H8.66719C8.49038 12.6667 8.32081 12.7369 8.19579 12.8619C8.07076 12.9869 8.00052 13.1565 8.00052 13.3333C8.00052 13.5101 8.07076 13.6797 8.19579 13.8047C8.32081 13.9298 8.49038 14 8.66719 14H15.3339C15.5107 14 15.6802 13.9298 15.8053 13.8047C15.9303 13.6797 16.0005 13.5101 16.0005 13.3333Z" fill="black" />
            </g>
            <defs>
              <clipPath id="clip0_493_1783">
                <rect width="16" height="16" fill="white" />
              </clipPath>
            </defs>
          </svg>}
        >
          {listLanguage.Attendance[language]}
        </Button>
      </Link>
    )
  } else if (status == 'delay') {
    return <></>
  } else if (status == 'past') {
    return (
      <Link to="thematicblock" state={{ data: false, id: id }}>

        <Button
          variant="contained"
          size="small"
          color="secondary"
          sx={{
            textTransform: "none",
            borderRadius: "10px",
            boxShadow: "none",
            width: "181px"
          }}
          startIcon={<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <g clipPath="url(#clip0_493_1783)">
              <path d="M2.66719 4C2.40436 4.00069 2.144 3.94925 1.90117 3.84866C1.65835 3.74808 1.43788 3.60034 1.25252 3.414L0.223189 2.498C0.0911113 2.38024 0.0112215 2.21484 0.00109455 2.03818C-0.00903242 1.86152 0.051433 1.68807 0.169189 1.556C0.286945 1.42392 0.452346 1.34403 0.629005 1.3339C0.805665 1.32377 0.979111 1.38424 1.11119 1.502L2.16786 2.44466C2.22835 2.51259 2.3021 2.56743 2.38457 2.60579C2.46705 2.64415 2.5565 2.66523 2.64743 2.66773C2.73835 2.67022 2.82883 2.65409 2.91329 2.62031C2.99774 2.58654 3.07439 2.53584 3.13852 2.47133L5.54119 0.183996C5.67039 0.068976 5.83923 0.00867518 6.01206 0.0158298C6.18489 0.0229845 6.34817 0.0970345 6.46742 0.222339C6.58666 0.347644 6.65254 0.514392 6.65113 0.687363C6.64972 0.860335 6.58113 1.02599 6.45986 1.14933L4.06719 3.42533C3.88304 3.60841 3.66461 3.75339 3.42438 3.852C3.18416 3.95061 2.92686 4.0009 2.66719 4ZM16.0005 2.66666C16.0005 2.48985 15.9303 2.32028 15.8053 2.19526C15.6802 2.07023 15.5107 2 15.3339 2H8.66719C8.49038 2 8.32081 2.07023 8.19579 2.19526C8.07076 2.32028 8.00052 2.48985 8.00052 2.66666C8.00052 2.84347 8.07076 3.01304 8.19579 3.13807C8.32081 3.26309 8.49038 3.33333 8.66719 3.33333H15.3339C15.5107 3.33333 15.6802 3.26309 15.8053 3.13807C15.9303 3.01304 16.0005 2.84347 16.0005 2.66666ZM4.06719 8.75866L6.45986 6.48266C6.52664 6.42321 6.58078 6.35093 6.61905 6.27012C6.65733 6.18932 6.67896 6.10164 6.68266 6.01231C6.68636 5.92297 6.67205 5.83381 6.64058 5.75011C6.60911 5.66642 6.56113 5.58992 6.49949 5.52515C6.43786 5.46038 6.36382 5.40867 6.28179 5.3731C6.19976 5.33752 6.11141 5.31882 6.022 5.31809C5.93259 5.31736 5.84395 5.33462 5.76135 5.36885C5.67875 5.40308 5.60388 5.45357 5.54119 5.51733L3.14119 7.80466C3.01428 7.92602 2.84545 7.99374 2.66986 7.99374C2.49426 7.99374 2.32543 7.92602 2.19852 7.80466L1.13852 6.748C1.01279 6.62656 0.844386 6.55936 0.669588 6.56088C0.49479 6.5624 0.327582 6.63251 0.203977 6.75612C0.0803713 6.87972 0.0102587 7.04693 0.00873977 7.22173C0.00722083 7.39653 0.0744171 7.56493 0.195856 7.69066L1.25252 8.74733C1.62564 9.12053 2.13113 9.33114 2.65885 9.33326C3.18658 9.33539 3.69375 9.12885 4.06986 8.75866H4.06719ZM16.0005 8C16.0005 7.82318 15.9303 7.65362 15.8053 7.52859C15.6802 7.40357 15.5107 7.33333 15.3339 7.33333H8.66719C8.49038 7.33333 8.32081 7.40357 8.19579 7.52859C8.07076 7.65362 8.00052 7.82318 8.00052 8C8.00052 8.17681 8.07076 8.34638 8.19579 8.4714C8.32081 8.59642 8.49038 8.66666 8.66719 8.66666H15.3339C15.5107 8.66666 15.6802 8.59642 15.8053 8.4714C15.9303 8.34638 16.0005 8.17681 16.0005 8ZM4.06719 14.092L6.45719 11.816C6.52397 11.7565 6.57811 11.6843 6.61639 11.6035C6.65466 11.5227 6.67629 11.435 6.67999 11.3456C6.68369 11.2563 6.66938 11.1671 6.63791 11.0834C6.60645 10.9998 6.55847 10.9232 6.49683 10.8585C6.43519 10.7937 6.36115 10.742 6.27912 10.7064C6.19709 10.6709 6.10874 10.6522 6.01933 10.6514C5.92992 10.6507 5.84128 10.668 5.75868 10.7022C5.67608 10.7364 5.60121 10.7869 5.53852 10.8507L3.13852 13.138C3.07439 13.2025 2.99774 13.2532 2.91329 13.287C2.82883 13.3208 2.73835 13.3369 2.64743 13.3344C2.5565 13.3319 2.46705 13.3108 2.38457 13.2725C2.3021 13.2341 2.22835 13.1793 2.16786 13.1113L1.11119 12.1687C0.979111 12.0509 0.805665 11.9904 0.629005 12.0006C0.452346 12.0107 0.286945 12.0906 0.169189 12.2227C0.051433 12.3547 -0.00903242 12.5282 0.00109455 12.7048C0.0112215 12.8815 0.0911113 13.0469 0.223189 13.1647L1.25252 14.0807C1.62564 14.4539 2.13113 14.6645 2.65885 14.6666C3.18658 14.6687 3.69375 14.4622 4.06986 14.092H4.06719ZM16.0005 13.3333C16.0005 13.1565 15.9303 12.9869 15.8053 12.8619C15.6802 12.7369 15.5107 12.6667 15.3339 12.6667H8.66719C8.49038 12.6667 8.32081 12.7369 8.19579 12.8619C8.07076 12.9869 8.00052 13.1565 8.00052 13.3333C8.00052 13.5101 8.07076 13.6797 8.19579 13.8047C8.32081 13.9298 8.49038 14 8.66719 14H15.3339C15.5107 14 15.6802 13.9298 15.8053 13.8047C15.9303 13.6797 16.0005 13.5101 16.0005 13.3333Z" fill="black" />
            </g>
            <defs>
              <clipPath id="clip0_493_1783">
                <rect width="16" height="16" fill="white" />
              </clipPath>
            </defs>
          </svg>}
        >
          {listLanguage.Attendance[language]}
        </Button>
      </Link>
    )

  }
}


const Fakultets = ({ elem, callback_func, status }) => {
  const [Name, setName] = useState('')
  const [open, setOpen] = useState(false)
  const handleOpen = () => setOpen(true)
  const handleClose = () => setOpen(false);
  const [open2, setOpen2] = useState(false)
  const handleOpen2 = () => setOpen2(true)
  const handleClose2 = () => setOpen2(false);
  const [openAlert, setOpenAlert] = useState(false)
  const [changed, serChanged] = useState(false)
  const [alertMessage, setAlertMessage] = useState('')
  const [dedlineTasks, setdedlineTasks] = useState(null)
  const language = useSelector(state => state.language)
  const handleCloseAlert = () => setOpenAlert(false);
  const handleChangeName = () => {
    patchTeacheravCalendar(`${lesson_edit}/?lesson_id=${elem.id}`, {
      name: Name
    },(response) => {
      callback_func(!status)
      handleClose2()
    }, (error) => {
      console.log(error);
    })
  }


  // const handleChangeDate = () => {
  //   patchTeacheravCalendar(`${lesson_edit}_date/?lesson_id=${elem.id}`, {
  //     date: dedlineTasks
  //   },(response) => {
  //     callback_func(!status)
  //     handleClose()
  //   }, (error) => {
  //     console.log(error);
  //   })
  // }



  const handleChangeDate = () => {
    patchTeacheravCalendar(`${lesson_edit}_date/?lesson_id=${elem.id}`, {
      date: dedlineTasks
    },(response) => {
      callback_func(!status)
      handleClose()
      // Alert
      setOpenAlert(true)
      serChanged(true)
      setAlertMessage('Saqlandi')
    }, (error) => {
      console.log(error);
      // Alert
      setOpenAlert(true)
      serChanged(false)
      setAlertMessage('Something went wrong')
    })
  }

  return (
    <>
      <tr>
        <th>{elem.number}</th>
        <th >
          <div style={{display: 'flex', justifyContent: "space-between"}}>
          {elem.lesson} 
           <Button
              variant="contained"
              sx={{
                borderRadius: "10px",
                textTransform: "capitalize",
                boxShadow: "none",
                padding: "6px",
                marginRight: "20px",
              }}
              onClick={handleOpen2}
              startIcon={<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clipPath="url(#clip0_1148_17994)">
                  <path d="M12.44 0.619885L4.31195 8.74789C4.00151 9.05665 3.7554 9.42392 3.58787 9.82845C3.42034 10.233 3.33471 10.6667 3.33595 11.1046V11.9999C3.33595 12.1767 3.40619 12.3463 3.53121 12.4713C3.65624 12.5963 3.82581 12.6666 4.00262 12.6666H4.89795C5.33579 12.6678 5.76953 12.5822 6.17406 12.4146C6.57858 12.2471 6.94585 12.001 7.25462 11.6906L15.3826 3.56255C15.7722 3.172 15.991 2.64287 15.991 2.09122C15.991 1.53957 15.7722 1.01044 15.3826 0.619885C14.9864 0.241148 14.4594 0.0297852 13.9113 0.0297852C13.3632 0.0297852 12.8362 0.241148 12.44 0.619885ZM14.44 2.61989L6.31195 10.7479C5.93603 11.1215 5.42795 11.3318 4.89795 11.3332H4.66928V11.1046C4.67067 10.5745 4.881 10.0665 5.25462 9.69055L13.3826 1.56255C13.525 1.42652 13.7144 1.35061 13.9113 1.35061C14.1082 1.35061 14.2976 1.42652 14.44 1.56255C14.5799 1.7029 14.6585 1.89301 14.6585 2.09122C14.6585 2.28942 14.5799 2.47954 14.44 2.61989Z" fill="white" />
                  <path d="M15.3333 5.986C15.1565 5.986 14.987 6.05624 14.8619 6.18126C14.7369 6.30629 14.6667 6.47586 14.6667 6.65267V10H12C11.4696 10 10.9609 10.2107 10.5858 10.5858C10.2107 10.9609 10 11.4696 10 12V14.6667H3.33333C2.8029 14.6667 2.29419 14.456 1.91912 14.0809C1.54405 13.7058 1.33333 13.1971 1.33333 12.6667V3.33333C1.33333 2.8029 1.54405 2.29419 1.91912 1.91912C2.29419 1.54405 2.8029 1.33333 3.33333 1.33333H9.36133C9.53815 1.33333 9.70771 1.2631 9.83274 1.13807C9.95776 1.01305 10.028 0.843478 10.028 0.666667C10.028 0.489856 9.95776 0.320286 9.83274 0.195262C9.70771 0.0702379 9.53815 0 9.36133 0L3.33333 0C2.4496 0.00105857 1.60237 0.352588 0.97748 0.97748C0.352588 1.60237 0.00105857 2.4496 0 3.33333L0 12.6667C0.00105857 13.5504 0.352588 14.3976 0.97748 15.0225C1.60237 15.6474 2.4496 15.9989 3.33333 16H10.8953C11.3333 16.0013 11.7671 15.9156 12.1718 15.7481C12.5764 15.5806 12.9438 15.3345 13.2527 15.024L15.0233 13.252C15.3338 12.9432 15.58 12.576 15.7477 12.1715C15.9153 11.767 16.0011 11.3332 16 10.8953V6.65267C16 6.47586 15.9298 6.30629 15.8047 6.18126C15.6797 6.05624 15.5101 5.986 15.3333 5.986ZM12.31 14.0813C12.042 14.3487 11.7031 14.5337 11.3333 14.6147V12C11.3333 11.8232 11.4036 11.6536 11.5286 11.5286C11.6536 11.4036 11.8232 11.3333 12 11.3333H14.6167C14.5342 11.7023 14.3493 12.0406 14.0833 12.3093L12.31 14.0813Z" fill="white" />
                </g>
                <defs>
                  <clipPath id="clip0_1148_17994">
                    <rect width="16" height="16" fill="white" />
                  </clipPath>
                </defs>
              </svg>

              }
            >
            </Button>
          </div>
        </th>
        <th>
         <div style={{display: 'flex', justifyContent: "space-between"}}>
         {elem.lesson_date} 
          <Button
                variant="contained"
                sx={{
                  borderRadius: "10px",
                  textTransform: "capitalize",
                  boxShadow: "none",
                  padding: "6px",
                  marginRight: "20px",
                }}
                onClick={handleOpen}
                startIcon={<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_1148_17994)">
                    <path d="M12.44 0.619885L4.31195 8.74789C4.00151 9.05665 3.7554 9.42392 3.58787 9.82845C3.42034 10.233 3.33471 10.6667 3.33595 11.1046V11.9999C3.33595 12.1767 3.40619 12.3463 3.53121 12.4713C3.65624 12.5963 3.82581 12.6666 4.00262 12.6666H4.89795C5.33579 12.6678 5.76953 12.5822 6.17406 12.4146C6.57858 12.2471 6.94585 12.001 7.25462 11.6906L15.3826 3.56255C15.7722 3.172 15.991 2.64287 15.991 2.09122C15.991 1.53957 15.7722 1.01044 15.3826 0.619885C14.9864 0.241148 14.4594 0.0297852 13.9113 0.0297852C13.3632 0.0297852 12.8362 0.241148 12.44 0.619885ZM14.44 2.61989L6.31195 10.7479C5.93603 11.1215 5.42795 11.3318 4.89795 11.3332H4.66928V11.1046C4.67067 10.5745 4.881 10.0665 5.25462 9.69055L13.3826 1.56255C13.525 1.42652 13.7144 1.35061 13.9113 1.35061C14.1082 1.35061 14.2976 1.42652 14.44 1.56255C14.5799 1.7029 14.6585 1.89301 14.6585 2.09122C14.6585 2.28942 14.5799 2.47954 14.44 2.61989Z" fill="white" />
                    <path d="M15.3333 5.986C15.1565 5.986 14.987 6.05624 14.8619 6.18126C14.7369 6.30629 14.6667 6.47586 14.6667 6.65267V10H12C11.4696 10 10.9609 10.2107 10.5858 10.5858C10.2107 10.9609 10 11.4696 10 12V14.6667H3.33333C2.8029 14.6667 2.29419 14.456 1.91912 14.0809C1.54405 13.7058 1.33333 13.1971 1.33333 12.6667V3.33333C1.33333 2.8029 1.54405 2.29419 1.91912 1.91912C2.29419 1.54405 2.8029 1.33333 3.33333 1.33333H9.36133C9.53815 1.33333 9.70771 1.2631 9.83274 1.13807C9.95776 1.01305 10.028 0.843478 10.028 0.666667C10.028 0.489856 9.95776 0.320286 9.83274 0.195262C9.70771 0.0702379 9.53815 0 9.36133 0L3.33333 0C2.4496 0.00105857 1.60237 0.352588 0.97748 0.97748C0.352588 1.60237 0.00105857 2.4496 0 3.33333L0 12.6667C0.00105857 13.5504 0.352588 14.3976 0.97748 15.0225C1.60237 15.6474 2.4496 15.9989 3.33333 16H10.8953C11.3333 16.0013 11.7671 15.9156 12.1718 15.7481C12.5764 15.5806 12.9438 15.3345 13.2527 15.024L15.0233 13.252C15.3338 12.9432 15.58 12.576 15.7477 12.1715C15.9153 11.767 16.0011 11.3332 16 10.8953V6.65267C16 6.47586 15.9298 6.30629 15.8047 6.18126C15.6797 6.05624 15.5101 5.986 15.3333 5.986ZM12.31 14.0813C12.042 14.3487 11.7031 14.5337 11.3333 14.6147V12C11.3333 11.8232 11.4036 11.6536 11.5286 11.5286C11.6536 11.4036 11.8232 11.3333 12 11.3333H14.6167C14.5342 11.7023 14.3493 12.0406 14.0833 12.3093L12.31 14.0813Z" fill="white" />
                  </g>
                  <defs>
                    <clipPath id="clip0_1148_17994">
                      <rect width="16" height="16" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
                }
              >
          </Button>
         </div>
        </th>
        <th style={{ width: "200px" }}>
          <TeacherSciencesButtonBox>
           
            <StatusLesson status={elem.status} status_day={elem.status_day} />
            <StatusLessonAttendece status={elem.status} status_day={elem.status_day} id={elem.id} />
          </TeacherSciencesButtonBox>
        </th>
      </tr>
      <Modal
        keepMounted
        open={open}
        onClose={handleClose}
        aria-labelledby="keep-mounted-modal-title"
        aria-describedby="keep-mounted-modal-description"
      >
        {/* <form> */}
        <ModalBox>
          <div style={{ marginBottom: '20px' }}>
            <ModalHeader>
              <Typography
                id="keep-mounted-modal-title"
                variant="h6"
                component="h4"
                sx={{
                  fontSize: "20px",
                  fontWeight: 600,
                  color: "#000",
                }}
              >
                {listLanguage.Edit[language]}
              </Typography>
              <span
                onClick={handleClose}
              >
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M18.0037 6.00006C17.8162 5.81259 17.5619 5.70728 17.2967 5.70728C17.0316 5.70728 16.7773 5.81259 16.5897 6.00006L12.0037 10.5861L7.41772 6.00006C7.2302 5.81259 6.97589 5.70728 6.71072 5.70728C6.44556 5.70728 6.19125 5.81259 6.00372 6.00006C5.81625 6.18759 5.71094 6.4419 5.71094 6.70706C5.71094 6.97223 5.81625 7.22653 6.00372 7.41406L10.5897 12.0001L6.00372 16.5861C5.81625 16.7736 5.71094 17.0279 5.71094 17.2931C5.71094 17.5582 5.81625 17.8125 6.00372 18.0001C6.19125 18.1875 6.44556 18.2928 6.71072 18.2928C6.97589 18.2928 7.2302 18.1875 7.41772 18.0001L12.0037 13.4141L16.5897 18.0001C16.7773 18.1875 17.0316 18.2928 17.2967 18.2928C17.5619 18.2928 17.8162 18.1875 18.0037 18.0001C18.1912 17.8125 18.2965 17.5582 18.2965 17.2931C18.2965 17.0279 18.1912 16.7736 18.0037 16.5861L13.4177 12.0001L18.0037 7.41406C18.1912 7.22653 18.2965 6.97223 18.2965 6.70706C18.2965 6.4419 18.1912 6.18759 18.0037 6.00006Z" fill="black" />
                </svg>
              </span>
            </ModalHeader>
          </div>
          <ModalSelectWrapper>
            <Typography
              id="keep-mounted-modal-title"
              variant="h6"
              component="h4"
              sx={{
                fontSize: "16px",
                fontWeight: 600,
                color: "#000",
                mb: "10px"
              }}
            >
              Mashg'ulot vaqti
            </Typography>
            <DataPicker setFunction={(val) => {setdedlineTasks(val)}}/>
          </ModalSelectWrapper>
          <ModalButtons>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px" }}
              variant="outlined"
              onClick={handleClose}
            >
              {listLanguage.Cancel[language]}
            </Button>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px", boxShadow: "none" }}
              variant="contained"
              type="submit"
              onClick={handleChangeDate}
            >
              Saqlash
            </Button>
          </ModalButtons>
        </ModalBox>
        {/* </form> */}

      </Modal>
      <Modal
        keepMounted
        open={open2}
        onClose={handleClose2}
        aria-labelledby="keep-mounted-modal-title"
        aria-describedby="keep-mounted-modal-description"
      >
        {/* <form> */}
        <ModalBox>
          <div style={{ marginBottom: '20px' }}>
            <ModalHeader>
              <Typography
                id="keep-mounted-modal-title"
                variant="h6"
                component="h4"
                sx={{
                  fontSize: "20px",
                  fontWeight: 600,
                  color: "#000",
                }}
              >
                Tahrirlash
              </Typography>
              <span
                onClick={handleClose2}
              >
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M18.0037 6.00006C17.8162 5.81259 17.5619 5.70728 17.2967 5.70728C17.0316 5.70728 16.7773 5.81259 16.5897 6.00006L12.0037 10.5861L7.41772 6.00006C7.2302 5.81259 6.97589 5.70728 6.71072 5.70728C6.44556 5.70728 6.19125 5.81259 6.00372 6.00006C5.81625 6.18759 5.71094 6.4419 5.71094 6.70706C5.71094 6.97223 5.81625 7.22653 6.00372 7.41406L10.5897 12.0001L6.00372 16.5861C5.81625 16.7736 5.71094 17.0279 5.71094 17.2931C5.71094 17.5582 5.81625 17.8125 6.00372 18.0001C6.19125 18.1875 6.44556 18.2928 6.71072 18.2928C6.97589 18.2928 7.2302 18.1875 7.41772 18.0001L12.0037 13.4141L16.5897 18.0001C16.7773 18.1875 17.0316 18.2928 17.2967 18.2928C17.5619 18.2928 17.8162 18.1875 18.0037 18.0001C18.1912 17.8125 18.2965 17.5582 18.2965 17.2931C18.2965 17.0279 18.1912 16.7736 18.0037 16.5861L13.4177 12.0001L18.0037 7.41406C18.1912 7.22653 18.2965 6.97223 18.2965 6.70706C18.2965 6.4419 18.1912 6.18759 18.0037 6.00006Z" fill="black" />
                </svg>
              </span>
            </ModalHeader>
          </div>
          <ModalSelectWrapper>
            <Typography
              id="keep-mounted-modal-title"
              variant="h6"
              component="h4"
              sx={{
                fontSize: "16px",
                fontWeight: 600,
                color: "#000",
                mb: "10px"
              }}
            >
              Mavzu
            </Typography>
            <CustomizedInputSimple callback_func={(val) => { setName(val) }} defaultValue={elem.lesson} placeholder="Kiriting" />
          </ModalSelectWrapper>
          <ModalButtons>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px" }}
              variant="outlined"
              onClick={handleClose2}
            >
              Bekor qilish
            </Button>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px", boxShadow: "none" }}
              variant="contained"
              type="submit"
              onClick={handleChangeDate}
            >
              Saqlash
            </Button>
          </ModalButtons>
        </ModalBox>
        {/* </form> */}

      </Modal>
      <Modal
        keepMounted
        open={open2}
        onClose={handleClose2}
        aria-labelledby="keep-mounted-modal-title"
        aria-describedby="keep-mounted-modal-description"
      >
        {/* <form> */}
        <ModalBox>
          <div style={{ marginBottom: '20px' }}>
            <ModalHeader>
              <Typography
                id="keep-mounted-modal-title"
                variant="h6"
                component="h4"
                sx={{
                  fontSize: "20px",
                  fontWeight: 600,
                  color: "#000",
                }}
              >
                Tahrirlash
              </Typography>
              <span
                onClick={handleClose2}
              >
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M18.0037 6.00006C17.8162 5.81259 17.5619 5.70728 17.2967 5.70728C17.0316 5.70728 16.7773 5.81259 16.5897 6.00006L12.0037 10.5861L7.41772 6.00006C7.2302 5.81259 6.97589 5.70728 6.71072 5.70728C6.44556 5.70728 6.19125 5.81259 6.00372 6.00006C5.81625 6.18759 5.71094 6.4419 5.71094 6.70706C5.71094 6.97223 5.81625 7.22653 6.00372 7.41406L10.5897 12.0001L6.00372 16.5861C5.81625 16.7736 5.71094 17.0279 5.71094 17.2931C5.71094 17.5582 5.81625 17.8125 6.00372 18.0001C6.19125 18.1875 6.44556 18.2928 6.71072 18.2928C6.97589 18.2928 7.2302 18.1875 7.41772 18.0001L12.0037 13.4141L16.5897 18.0001C16.7773 18.1875 17.0316 18.2928 17.2967 18.2928C17.5619 18.2928 17.8162 18.1875 18.0037 18.0001C18.1912 17.8125 18.2965 17.5582 18.2965 17.2931C18.2965 17.0279 18.1912 16.7736 18.0037 16.5861L13.4177 12.0001L18.0037 7.41406C18.1912 7.22653 18.2965 6.97223 18.2965 6.70706C18.2965 6.4419 18.1912 6.18759 18.0037 6.00006Z" fill="black" />
                </svg>
              </span>
            </ModalHeader>
          </div>
          <ModalSelectWrapper>
            <Typography
              id="keep-mounted-modal-title"
              variant="h6"
              component="h4"
              sx={{
                fontSize: "16px",
                fontWeight: 600,
                color: "#000",
                mb: "10px"
              }}
            >
              Mavzu
            </Typography>
            <CustomizedInputSimple callback_func={(val) => { setName(val) }} defaultValue={elem.lesson} placeholder="Kiriting" />
          </ModalSelectWrapper>
          <ModalButtons>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px" }}
              variant="outlined"
              onClick={handleClose2}
            >
              Bekor qilish
            </Button>
            <Button
              sx={{ width: "50%", textTransform: "none", borderRadius: "10px", boxShadow: "none" }}
              variant="contained"
              type="submit"
              onClick={handleChangeName}
            >
              {listLanguage.Save[language]}
            </Button>
          </ModalButtons>
        </ModalBox>
        {/* </form> */}

      </Modal>
      <Snackbar open={openAlert} anchorOrigin={changed ? anchorOrigin1 : anchorOrigin2} autoHideDuration={6000} onClose={handleCloseAlert}>
        <Alert onClose={handleCloseAlert} severity={changed ? "success" : "error"} sx={{ width: '100%' }}>
          {alertMessage}
        </Alert>
      </Snackbar>
    </>
  )
}